apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: 2020-12-01T10:29:38Z
  generation: 2
  labels:
    app: orderer2
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:strategy:
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:affinity:
              .: {}
              f:podAntiAffinity:
                .: {}
                f:preferredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"orderer"}:
                .: {}
                f:args: {}
                f:env:
                  .: {}
                  k:{"name":"FABRIC_LOGGING_SPEC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_CLUSTER_ROOTCAS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_GENESISFILE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_GENESISMETHOD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_LISTENADDRESS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_LOCALMSPDIR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_LOCALMSPID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_TLS_CERTIFICATE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_TLS_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_TLS_PRIVATEKEY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_GENERAL_TLS_ROOTCAS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_METRICS_PROVIDER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ORDERER_OPERATIONS_LISTENADDRESS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":7050,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":8443,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/hyperledger/orderer"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/hyperledger/production"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                f:workingDir: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"orderer2-persist-pvc"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
              k:{"name":"orderer2-pvc"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
    manager: kubectl.exe
    operation: Update
    time: 2020-12-01T10:35:14Z
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: 2020-12-01T10:35:41Z
  name: orderer2
  namespace: hyperledger
  resourceVersion: "869064"
  selfLink: /apis/apps/v1/namespaces/hyperledger/deployments/orderer2
  uid: 6c5c12d3-cc45-4d10-922c-01573e4b8bb0
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: orderer2
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: orderer2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - orderer0
                  - orderer1
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - orderer
        env:
        - name: FABRIC_LOGGING_SPEC
          value: DEBUG
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: 0.0.0.0:8443
        - name: ORDERER_METRICS_PROVIDER
          value: prometheus
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/genesis.block
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "true"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'
        - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'
        image: hyperledger/fabric-orderer:amd64-2.2.0
        imagePullPolicy: IfNotPresent
        name: orderer
        ports:
        - containerPort: 7050
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/hyperledger/production
          name: orderer2-persist-pvc
        - mountPath: /var/hyperledger/orderer
          name: orderer2-pvc
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: orderer2-pvc
        persistentVolumeClaim:
          claimName: orderer2-pvc
      - name: orderer2-persist-pvc
        persistentVolumeClaim:
          claimName: orderer2-persist-pvc